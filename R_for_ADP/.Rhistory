df_10_1 = c(163, 161, 168, 161, 157,
162, 153, 159, 164, 170,
152, 160, 157, 168, 150,
165, 156, 151, 162, 150,
156, 152, 161, 165, 168,
167, 165, 168, 159, 156)
write.csv(df_10_1,
file="D:/adp-preparation/R_for_ADP/statistics/Data/practice_10_1.csv")
test_vec <- read.csv("D:/adp-preparation/R_for_ADP/statistics/Data/practice_10_1.csv")
print(test_vec)
test_vec <- read.csv("D:/adp-preparation/R_for_ADP/statistics/Data/practice_10_1.csv",
header = TRUE)
print(test_vec)
View(test_vec)
df_10_1 = c(163, 161, 168, 161, 157,
162, 153, 159, 164, 170,
152, 160, 157, 168, 150,
165, 156, 151, 162, 150,
156, 152, 161, 165, 168,
167, 165, 168, 159, 156)
write.csv(df_10_1,
file="D:/adp-preparation/R_for_ADP/statistics/Data/practice_10_1.csv",
row.names=FALSE)
test_vec <- read.csv("D:/adp-preparation/R_for_ADP/statistics/Data/practice_10_1.csv",
header = TRUE)
test_vec
df_test <- read.csv("/statistics/Data/practice_10_1_01.csv")
answer_1 <- mean(df_test)
print(answer_1)
df_test <- read.csv("./statistics/Data/practice_10_1_01.csv")
df_test <- read.csv("./statistics/Data/practice_10_1_01.csv")
answer_1 <- mean(df_test)
print(answer_1)
View(df_test)
type(df_test[3])
typeof(df_test[2])
typeof(df_test[2,1])
colMeans(df_test[,1])
colMeans(df_test)
df_test <- read.csv("./statistics/Data/practice_10_1_01.csv")
answer_1 <- colMeans(df_test)
print(answer_1)
# 10장 통계적 추론
# 10.2 모평균의 추정(표본의 크기가 클 때)
# 예제3
# 평균수명을 추정하고 그 추정량의 표준오차를 구하라.
# 표본평균
prac_mean = 88/40
# 표본표준편차
prac_sd = sqrt((1/(40-1))*(212-40*prac_mean^2))
# 추정된 표준오차
prac_se = prac_se / sqrt(40)
print(prac_se)
# 10장 통계적 추론
# 10.2 모평균의 추정(표본의 크기가 클 때)
# 예제3
# 평균수명을 추정하고 그 추정량의 표준오차를 구하라.
# 표본평균
prac_mean = 88/40
# 표본표준편차
prac_sd = sqrt((1/(40-1))*(212-40*prac_mean^2))
# 추정된 표준오차
prac_se = prac_sd / sqrt(40)
print(prac_se)
# 10장 통계적 추론
# 10.2 모평균의 추정(표본의 크기가 클 때)
# 예제4
# 문제: \mu에 대한 95% 신뢰구간을 구하여라.
# 표준편차
population_sd = 8
# 표본의 크기
n = 25
# 표본평균
sample_mean = 42.7
# 신뢰구간
lowerbound = 42.7 - 1.96*(population_sd/sqrt(n))
upperbound = 42.7 + 1.96*(population_sd/sqrt(n))
# 정답 출력
print(paste("[", lowerbound, upperbound, "]"))
# 10장 통계적 추론
# 10.2 모평균의 추정(표본의 크기가 클 때)
# 예제4
# 문제: \mu에 대한 95% 신뢰구간을 구하여라.
# 표준편차
population_sd = 8
# 표본의 크기
n = 25
# 표본평균
sample_mean = 42.7
# 신뢰구간
lowerbound = 42.7 - 1.96*(population_sd/sqrt(n))
upperbound = 42.7 + 1.96*(population_sd/sqrt(n))
# 정답 출력
print(paste("(", lowerbound, ",", upperbound, ")"))
# 10장 통계적 추론
# 10.2 모평균의 추정(표본의 크기가 클 때)
# 예제5
# 문제: \mu 의 95%와 99% 신뢰구간을 구하고 이를 비교하라.
# 표본의 크기
n = 36
# 표본평균
sample_mean = 342
# 표본표준편차
sample_sd = 20
# 95% 신뢰구간
lowerbound_95 = 342 - 1.96 * (sample_sd / sqrt(n))
upperbound_95 = 342 + 1.96 * (sample_sd / sqrt(n))
print(paste("(", lowerbound_95, ",", upperbound_95, ")"))
# 99% 신뢰구간
lowerbound_99 = 342 - 2.575 * (sample_sd / sqrt(n))
upperbound_99 = 342 + 2.575 * (sample_sd / sqrt(n))
print(paste("(", lowerbound_99, ",", upperbound_99, ")"))
# 10장 통계적 추론
# 10.2 모평균의 추정(표본의 크기가 클 때)
# 예제6
# 문제: 평균무게 \mu에 대한 오차가 0.75 이하가 될 확률이 최소한 90%가 되기
#       위해서는 어느 정도 크기의 표본을 조사하여야 하겠는가?
# 표준편차
population_sd = 4
# 유의확률
alpha = 0.1
# 오차
d = 0.75
# 표본의 크기 n의 하한
lowerbound = (1.645 * (population_sd / d))^2
print(ceiling(lowerbound))
# 10장 통계적 추론
# 10.3 모평균에 대한 검정(표본의 크기가 클 때)
# 예제7
# 자료에 근거해서 그 책자의 주장이 옳다고 할 수 있는지 유의수준 5%로 검정하라.
# 표본의 크기
n = 56
# 표본평균
sample_mean = 10.5
# 표본표준편차
sample_sd = 4.5
# 검정통계량
z = (sample_mean - 10) / (sample_sd/sqrt(n))
# 정답 출력
print(1.645 < z)
# 10장 통계적 추론
# 10.3 모평균에 대한 검정(표본의 크기가 클 때)
# 예제8
# 문제: 앞의 예제1에 주어진 중학생의 키 자료로부터 그 도시의 중학교 1학년
#       남학생의 평균키가 다른 도시의 중학교 1학년 남학생의 평균키인 159cm와
#       차이가 있다고 할 수 있는지 판단하라.
# 데이터 불러오기
data <- as.vector(read.csv("./statistics/Data/practice_10_1_01.csv",
header = TRUE))
# 검정통계량
z = (mean(data) - 159) / (sd(data)/length(data))
# p-value(유의확률) 구하기
p-value = (1 - pnorm(z)) * 2
# 정답 출력
print(p-value)
# 10장 통계적 추론
# 10.3 모평균에 대한 검정(표본의 크기가 클 때)
# 예제8
# 문제: 앞의 예제1에 주어진 중학생의 키 자료로부터 그 도시의 중학교 1학년
#       남학생의 평균키가 다른 도시의 중학교 1학년 남학생의 평균키인 159cm와
#       차이가 있다고 할 수 있는지 판단하라.
# 데이터 불러오기
data <- as.vector(read.csv("./statistics/Data/practice_10_1_01.csv",
header = TRUE))
# 검정통계량
z = (mean(data) - 159) / (sd(data)/length(data))
# p-value(유의확률) 구하기
p_value = (1 - pnorm(z)) * 2
# 정답 출력
print(p_value)
print(mean(data))
print(data)
data <- as.vector(data)
print(data)
print(typeof(data))
data <- as.vector(data[,1])
print(typeof(data))
print(data)
data <- as.vector(read.csv("./statistics/Data/practice_10_1_01.csv",
header = TRUE)[,1])
print(data)
# 정답 출력
print(mean(data))
# 정답 출력
print(sd(data))
# 정답 출력
print(length(data))
# 정답 출력
print(p_value)
# 데이터 불러오기
data <- as.vector(read.csv("./statistics/Data/practice_10_1_01.csv",
header = TRUE)[,1])
# 검정통계량
z = (mean(data) - 159) / (sd(data)/length(data))
# p-value(유의확률) 구하기
p_value = (1 - pnorm(z)) * 2
# 정답 출력
print(p_value)
# 데이터 불러오기
data <- as.vector(read.csv("./statistics/Data/practice_10_1_01.csv",
header = TRUE)[,1])
# 검정통계량
z = (mean(data) - 159) / (sd(data) / sqrt(length(data)))
# p-value(유의확률) 구하기
p_value = (1 - pnorm(z)) * 2
# 정답 출력
print(p_value)
data <- read.csv("./statistics/Data/practice_10_1_01.csv")
answer_1 <- mean(data$x)
print(answer_1)
data <- read.csv("./statistics/Data/practice_10_1_01.csv")
answer_1 <- mean(data$x)
print(answer_1)
lowerbound = answer_1 - 1.96 * (sd(data$x) / sqrt(length(data$x)))
upperbound = answer_1 + 1.96 * (sd(data$x) / sqrt(length(data$x)))
print(paste("(", lowerbound, ",", upperbound, ")"))
z = (mean(data$x) - 155) / (sd(data$x)/sqrt(length((data$x))))
print(z < -1.96 or z >1.96)
z = (mean(data$x) - 155) / (sd(data$x)/sqrt(length((data$x))))
print(z < -1.96 | z >1.96)
